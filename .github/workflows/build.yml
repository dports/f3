name: CI Build

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup environment
      shell: bash
      run: |
        case ${{ matrix.os }} in
          windows-latest)
            # Install Cygwin
            choco install cygwin -y
            export CYGWIN_ROOT="/cygdrive/c/cygwin"
            export PATH="$CYGWIN_ROOT/bin:$PATH"
            
            # Install required Cygwin packages
            cyg-get.exe -P gcc-core,make,libargp-devel
            ;;
            
          ubuntu-latest)
            sudo apt-get update
            sudo apt-get install -y libudev-dev libparted-dev
            ;;
            
          macos-latest)
            brew update
            brew install argp-standalone
            ;;
        esac

    - name: Build f3
      shell: bash
      run: |
        case ${{ matrix.os }} in
          windows-latest)
            export LDFLAGS="-Wl,--stack,4000000 -largp"
            make
            ;;
            
          ubuntu-latest)
            make
            make extra
            ;;
            
          macos-latest)
            make ARGP=$(brew --prefix)
            ;;
        esac

    - name: Run tests
      shell: bash
      run: |
        case ${{ matrix.os }} in
          windows-latest)
            ./f3write --version
            ./f3read --version
            ;;
            
          ubuntu-latest)
            make test
            ;;
        esac

  docker-build:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Build Docker image
        run: docker build -t f3 .
      
      - name: Test Docker image
        run: |
          docker run --rm f3 f3write --version
          docker run --rm f3 f3read --version
